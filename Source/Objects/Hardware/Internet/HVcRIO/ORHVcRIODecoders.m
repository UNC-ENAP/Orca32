//
//  ORHVcRIODecoders.m
//  Orca
//
// Created by Mark  A. Howe on Mon Jun 16, 2014
// Code partially generated by the OrcaCodeWizard. Written by Mark A. Howe.
// Copyright (c) 2014, University of North Carolina. All rights reserved.
//-----------------------------------------------------------
//This program was prepared for the Regents of the University of
//North Carolina sponsored in part by the United States
//Department of Energy (DOE) under Grant #DE-FG02-97ER41020.
//The University has certain rights in the program pursuant to
//the contract and the program should not be copied or distributed
//outside your organization.  The DOE and the University of
//North Carolina reserve all rights in the program. Neither the authors,
//University of North Carolina, or U.S. Government make any warranty,
//express or implied, or assume any liability or responsibility
//for the use of this software.
//-------------------------------------------------------------


#import "ORHVcRIODecoders.h"
#import "ORDataPacket.h"
#import "ORDataSet.h"

//------------------------------------------------------------------------------------------------
// Data Format
// xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx
// ^^^^ ^^^^ ^^^^ ^^------------------------data id
//                  ^^ ^^^^ ^^^^ ^^^^ ^^^^--length in longs
//
// xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx
//                          ^^^^ ^^^^ ^^^^--device id
// xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx  time measured
// xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx  adc index
// xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx  adc low
// xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx  adc high
// xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx  spare
// xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx  spare
// xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx  spare
//-----------------------------------------------------------------------------------------------

@implementation ORHVcRIODecoderForAdc

- (unsigned long) decodeData:(void*)someData fromDecoder:(ORDecoder*)aDecoder intoDataSet:(ORDataSet*)aDataSet
{
	unsigned long *dataPtr = (unsigned long*)someData;
    int dataIndex = dataPtr[3];
    union {
        double asDouble;
        unsigned long asLong[2];
    } theData;
    theData.asLong[0] = dataPtr[4];
    theData.asLong[1] = dataPtr[5];
    double theValue = theData.asDouble;
    NSString* valueString = [NSString stringWithFormat:@"%f",theValue];
    NSString* indexString = [NSString stringWithFormat:@"%d",dataIndex];
    [aDataSet loadGenericData:valueString sender:self withKeys:@"HVcRIO",indexString,nil];
	return ExtractLength(dataPtr[0]);
}

- (NSString*) dataRecordDescription:(unsigned long*)dataPtr
{
    NSString* title= @"HVcRIO\n\n";
    NSString* theString =  [NSString stringWithFormat:@"%@\n",title];               
	int ident = dataPtr[1] & 0xfff;
	theString = [theString stringByAppendingFormat:@"Unit %d\n",ident];
    NSDate* date = [NSDate dateWithTimeIntervalSince1970:(NSTimeInterval)dataPtr[2]];
    int dataIndex = dataPtr[3];
    union {
        double asDouble;
        unsigned long asLong[2];
    } theData;
    theData.asLong[0] = dataPtr[4];
    theData.asLong[1] = dataPtr[5];
    double theValue = theData.asDouble;
    
    theString = [theString stringByAppendingFormat:@"Channel %d: %lf\n time: %@\n",dataIndex,theValue,[date stdDescription]];

	return theString;
}
@end


