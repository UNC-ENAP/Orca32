//--------------------------------------------------------
// ORNMon5085Controller
// Created by Mark  A. Howe on Fri Oct 4, 2014
// Code partially generated by the OrcaCodeWizard. Written by Mark A. Howe.
// Copyright (c) 2013 University of North Carolina. All rights reserved.
//-----------------------------------------------------------
//This program was prepared for the Regents of the University of 
//North Carolina  sponsored in part by the United States 
//Department of Energy (DOE) under Grant #DE-FG02-97ER41020. 
//The University has certain rights in the program pursuant to 
//the contract and the program should not be copied or distributed 
//outside your organization.  The DOE and the University of 
//North Carolina reserve all rights in the program. Neither the authors,
//University of North Carolina, or U.S. Government make any warranty, 
//express or implied, or assume any liability or responsibility 
//for the us of this software.
//-------------------------------------------------------------

#pragma mark •••Imported Files

@class ORCompositeTimeLineView;
@class ORSerialPortController;

@interface ORNMon5085Controller : OrcaObjectController
{
	
    IBOutlet NSButton*               lockButton;
	IBOutlet NSTextField*            maxRadValueField;
	IBOutlet NSTextField*            dateOfMaxRadValueField;
	IBOutlet NSTextField*            highVoltageField;
	IBOutlet NSTextField*            deadtimeField;
	IBOutlet NSTextField*            actualModeField;
	IBOutlet NSTextField*            discriminatorField;
	IBOutlet NSTextField*            calibrationValueField;
	IBOutlet NSTextField*            timeUtilStopField;
	IBOutlet NSTextField*            isRunningField;
	IBOutlet NSTextField*            timeMeasuredField;
	IBOutlet NSTextField*            unitsField;
	IBOutlet NSTextField*            units1Field;
	IBOutlet NSTextField*            radValueField;
	IBOutlet NSTextField*            modeTimeField;
	IBOutlet NSTextField*            hhmmssField;
    IBOutlet ORCompositeTimeLineView* plotter;
    IBOutlet ORSerialPortController* serialPortController;
    IBOutlet NSButton*		         plotLogCB;
    IBOutlet NSButton*		         runButton;
    IBOutlet NSPopUpButton*          modePU;
    IBOutlet NSButton*               isLogCB;
}

#pragma mark •••Initialization
- (id) init;
- (void) dealloc;
- (void) awakeFromNib;

#pragma mark •••Notifications
- (void) registerNotificationObservers;
- (void) updateWindow;
- (void) updateButtons;

#pragma mark •••Interface Management
- (void) updateTimePlot:(NSNotification*)aNote;
- (void) maxRadValueChanged:(NSNotification*)aNote;
- (void) dateOfMaxRadValueChanged:(NSNotification*)aNote;
- (void) highVoltageChanged:(NSNotification*)aNote;
- (void) deadtimeChanged:(NSNotification*)aNote;
- (void) actualModeChanged:(NSNotification*)aNote;
- (void) discriminatorChanged:(NSNotification*)aNote;
- (void) calibrationValueChanged:(NSNotification*)aNote;
- (void) timeUtilStopChanged:(NSNotification*)aNote;
- (void) isRunningChanged:(NSNotification*)aNote;
- (void) isLogChanged:(NSNotification*)aNote;
- (void) unitsChanged:(NSNotification*)aNote;
- (void) radValueChanged:(NSNotification*)aNote;
- (void) modeTimeChanged:(NSNotification*)aNote;
- (void) modeChanged:(NSNotification*)aNote;
- (void) lockChanged:(NSNotification*)aNote;
- (void) scaleAction:(NSNotification*)aNotification;
- (void) miscAttributesChanged:(NSNotification*)aNote;
- (BOOL) portLocked;

#pragma mark •••Actions
- (IBAction) isLogAction:(id)sender;
- (IBAction) modeTimeAction:(id)sender;
- (IBAction) modeAction:(id) sender;
- (IBAction) lockAction:(id) sender;
- (IBAction) initHWAction:(id) sender;
- (IBAction) toggleRun:(id) sender;

#pragma mark •••Data Source

- (int) numberPointsInPlot:(id)aPlotter;
- (void) plotter:(id)aPlotter index:(int)i x:(double*)xValue y:(double*)yValue;

@end


