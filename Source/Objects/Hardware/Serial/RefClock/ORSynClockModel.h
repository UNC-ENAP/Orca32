//--------------------------------------------------------
// ORSynClockModel
// Created by Mark  A. Howe on Fri Jul 22 2005 / Julius Hartmann, KIT, November 2017
// Code partially generated by the OrcaCodeWizard. Written by Mark A. Howe.
// Copyright (c) 2005 CENPA, University of Washington. All rights reserved.
//-----------------------------------------------------------
//This program was prepared for the Regents of the University of
//Washington at the Center for Experimental Nuclear Physics and
//Astrophysics (CENPA) sponsored in part by the United States
//Department of Energy (DOE) under Grant #DE-FG02-97ER41020.
//The University has certain rights in the program pursuant to
//the contract and the program should not be copied or distributed
//outside your organization.  The DOE and the University of
//Washington reserve all rights in the program. Neither the authors,
//University of Washington, or U.S. Government make any warranty,
//express or implied, or assume any liability or responsibility
//for the use of this software.
//-------------------------------------------------------------

#pragma mark ***Imported Files

@class ORRefClockModel;
// #define kWGRemoteCmd	'R'
// #define kWGFreqCmd 'F'
// #define kWGAttCmd 'Q'
// #define kWGAmpltCmd 'A'
// #define kWGDutyCCmd 'D'
// #define kWGFormCmd 'K'
// #define kWGProgModCmd 'C'
// #define kWGStartProgCmd 'B'
// #define kWGRdyPrgrmCmd 'b'
// #define kWGStopPrgrmCmd 'U'
// #define kWGFinPrgrmCmd 'u'

//#define VMax 19.93  // maximum Voltage; tests with an available device showed,
//// that the 20V from the datasheet could not be reached.
//#define dampedMax (VMax / 10)  // maximum voltage when damping is set
//#define VMin 0.02  // minimum voltage (with damping)

@interface ORSynClockModel : NSObject
{
    @private
        ORRefClockModel*  refClock;
        // int reTxCount;  // in case of errors or timeout retransmit; if retransmit
        // // is required, put last command to cmdQueue and dequeueFromBottom
        //
        BOOL      verbose;
        BOOL      statusPoll;
        NSString* statusMessage;
#define nLastMsgs 10
        NSMutableArray* previousStatusMessages;
}

#pragma mark ***Initialization
- (ORSynClockModel*) init;
- (void) dealloc;
- (void) setRefClock:(ORRefClockModel*)aRefClock;
- (void) dataAvailable:(NSNotification*)note;

#pragma mark ***Accessors
- (BOOL) verbose;
- (void) setVerbose:(BOOL)aVerbose;
- (void) requestStatus;
- (void) setStatusPoll:(BOOL)aStatusPoll;
- (NSString*) statusMessages;  // returns the statusses of nLastMsgs previeous requests for display
- (BOOL) portIsOpen;

#pragma mark ***Commands
- (void) writeData:(NSDictionary*)aDictionary;
- (void) processResponse:(NSData*)someData;
- (NSDictionary*) alarmWindowCommand;
- (NSDictionary*) statusCommand;

// - (void) setRemote;
// - (void) setLocal;
// - (NSData*) progModeCommand;
// - (NSData*) startProgCommand;
// - (NSData*) checkReadyForProg:(int) nPoints;
// - (NSData*) isReadyForProgReturned;
// - (NSData*) WGBytesFromFloat;
// - (NSData*) stopProgCommand;
// - (NSData*) checkStoppedProg:(int) nPoints;
// - (NSData*) isStoppedProgReturned;

#pragma mark ***Archival
- (id)   initWithCoder:(NSCoder*)decoder;
- (void) encodeWithCoder:(NSCoder*)encoder;
@end

extern NSString* ORSynClockModelTrackModeChanged;
extern NSString* ORSynClockModelSyncChanged;
extern NSString* ORSynClockModelAlarmWindowChanged;
extern NSString* ORSynClockModelStatusChanged;
extern NSString* ORSynClockModelStatusPollChanged;
extern NSString* ORSynClockModelStatusOutputChanged;
extern NSString* ORSynClockModelDeviceIDButtonChanged;
extern NSString* ORSynClockModelResetChanged;

//extern NSString* ORRefClockLockChanged;
extern NSString* ORRefClockModelVerboseChanged;
extern NSString* ORRefClockLock;

extern NSString* ORSynClockDataAvailable;

extern NSString* ORSynClockStatusUpdated;

//extern NSString* ORSynClockLock;
//extern NSString* ORSynClockModelSerialPortChanged;
//extern NSString* ORSynClockModelPortNameChanged;
//extern NSString* ORSynClockModelPortStateChanged;
//extern NSString* ORSynClockModelVerboseChanged;

