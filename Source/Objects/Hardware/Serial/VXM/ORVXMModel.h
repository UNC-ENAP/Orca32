//--------------------------------------------------------
// ORVXMModel
// Created by Mark  A. Howe on Fri Jul 22 2005
// Code partially generated by the OrcaCodeWizard. Written by Mark A. Howe.
// Copyright (c) 2005 CENPA, University of Washington. All rights reserved.
//-----------------------------------------------------------
//This program was prepared for the Regents of the University of 
//Washington at the Center for Experimental Nuclear Physics and 
//Astrophysics (CENPA) sponsored in part by the United States 
//Department of Energy (DOE) under Grant #DE-FG02-97ER41020. 
//The University has certain rights in the program pursuant to 
//the contract and the program should not be copied or distributed 
//outside your organization.  The DOE and the University of 
//Washington reserve all rights in the program. Neither the authors,
//University of Washington, or U.S. Government make any warranty, 
//express or implied, or assume any liability or responsibility 
//for the use of this software.
//-------------------------------------------------------------

#pragma mark ***Imported Files

@class ORSerialPort;

#define kNumVXMMotors  2
enum {
	kXYBackAndForth,
	kXYRaster,
	kXYUseFile
};

enum {
	kXYSyncWithRunOption  = 0,
	kXYStopRunOption      = 1,
	kXYShipPositionOption = 2
};

#define kNumTrackPoints 100

@interface ORVXMModel : OrcaObject
{
    @private
        NSString*       portName;
        BOOL            portWasOpen;
        ORSerialPort*   serialPort;
        NSPoint         xyPosition;
        NSPoint         oldXyPosition;
        NSPoint         cmdPosition;
        BOOL            absMotion;
        BOOL            goingHome;
        unsigned        currentTrackIndex;
        unsigned        validTrackCount;
        NSPoint         track[kNumTrackPoints];
        NSString*       cmdFile;
        NSPoint         startPoint;
        NSPoint         endPoint;
        NSPoint         delta;
        float           dwellTime;
        int             patternType;
        unsigned long   optionMask;

        unsigned long	dataId;
        BOOL            moving;

        BOOL            firstPosition;
        BOOL            dwelling;
        NSMutableArray* cmdList;
        NSTimeInterval  waitingStartTime;

		NSPoint			fullScale;
        NSPoint			conversion;
        NSPoint			motorSpeed;
		unsigned short  enabledMask;
	
		BOOL			queryInProgress;
        int             lastMotorQuery;

}

#pragma mark ***Initialization

- (id)   init;
- (void) dealloc;

- (void) registerNotificationObservers;
- (void) dataReceived:(NSNotification*)note;

#pragma mark ***Accessors
- (int) lastMotorQuery;
- (void) setLastMotorQuery:(int)aMotor;
- (BOOL) queryInProgress;
- (void) setQueryInProgress:(BOOL)state;
- (unsigned short) enabledMask;
- (void) setEnabledMask:(unsigned short)aEnabledMask;
- (BOOL) isMotorEnabled:(unsigned short)aMotor;
- (void) enableMotor:(unsigned short)aMotor withValue:(BOOL)aState;
- (NSPoint) conversion;
- (void) setConversion:(NSPoint)aStepsPerMillimeter;
- (NSPoint) fullScale;
- (void) setFullScale:(NSPoint)aFullScale;
- (NSMutableArray*) cmdList;
- (void) setCmdList:(NSMutableArray*)aCmdList;
- (BOOL) moving;
- (void) setMoving:(BOOL)aMoving;
- (unsigned long) optionMask;
- (void) setOptionMask:(unsigned long)aOptionMask;
- (void) setOption:(int)anOption; 
- (void) clearOption:(int)anOption; 
- (BOOL) optionSet:(int)anOption;
- (int) patternType;
- (void) setPatternType:(int)aPatternType;
- (float) dwellTime;
- (void) setDwellTime:(float)aDwellTime;
- (NSPoint) delta;
- (void) setDelta:(NSPoint)aDelta;
- (NSPoint) endPoint;
- (void) setEndPoint:(NSPoint)aEnd;
- (NSPoint) startPoint;
- (void) setStartPoint:(NSPoint)aStart;
- (NSString*) cmdFile;
- (void) setCmdFile:(NSString*)aCmdFile;
- (unsigned)currentTrackIndex;
- (unsigned)validTrackCount;
- (NSPoint) track:(unsigned)i;

- (BOOL) goingHome;
- (void) setGoingHome:(BOOL)aGoingHome;
- (BOOL) absMotion;
- (void) setAbsMotion:(BOOL)aAbsMotion;
- (NSPoint) cmdPosition;
- (void) setCmdPosition:(NSPoint)aCmdPosition;
- (NSPoint) xyPosition;
- (void) setXyPosition:(NSPoint)aPosition;
- (ORSerialPort*) serialPort;
- (void) setSerialPort:(ORSerialPort*)aSerialPort;
- (BOOL) portWasOpen;
- (void) setPortWasOpen:(BOOL)aPortWasOpen;
- (NSString*) portName;
- (void) setPortName:(NSString*)aPortName;
- (NSPoint) motorSpeed;
- (void) setMotorSpeed:(NSPoint)aSpeed;

- (void) openPort:(BOOL)state;
- (void) resetTrack;

#pragma mark ***Data Records
- (void) appendDataDescription:(ORDataPacket*)aDataPacket userInfo:(id)userInfo;
- (NSDictionary*) dataRecordDescription;
- (unsigned long) dataId;
- (void) setDataId: (unsigned long) DataId;
- (void) setDataIds:(id)assigner;
- (void) syncDataIdsWith:(id)anotherVXM;

- (void) shipMotorState:(BOOL)running;

#pragma mark ***Motor Commands
- (void) queryPosition;
- (void) goHome;
- (void) go;
- (void) moveToPoint:(NSPoint)aPoint;
- (void) move:(NSPoint)delta;
- (void) stopMotion;
- (void) runCmdFile;

@end

extern NSString* ORVXMModelMotorSpeedChanged;
extern NSString* ORVXMModelLastMotorQueryChanged;
extern NSString* ORVXMModelQueryInProgressChanged;
extern NSString* ORVXMModelEnabledMaskChanged;
extern NSString* ORVXMModelConversionChanged;
extern NSString* ORVXMModelFullScaleChanged;
extern NSString* ORVXMModelEndEditing;
extern NSString* ORVXMModelMovingChanged;
extern NSString* ORVXMModelPatternChanged;
extern NSString* ORVXMModelDwellTimeChanged;
extern NSString* ORVXMModelOptionMaskChanged;
extern NSString* ORVXMModelPatternTypeChanged;

extern NSString* ORVXMModelCmdFileChanged;
extern NSString* ORVXMModelGoingHomeChanged;
extern NSString* ORVXMModelAbsMotionChanged;
extern NSString* ORVXMModelCmdPositionChanged;
extern NSString* ORVXMModelPositionChanged;
extern NSString* ORVXMModelSerialPortChanged;
extern NSString* ORVXMLock;
extern NSString* ORVXMModelPortNameChanged;
extern NSString* ORVXMModelPortStateChanged;