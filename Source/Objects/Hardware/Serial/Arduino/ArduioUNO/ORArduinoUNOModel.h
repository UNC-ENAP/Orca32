//--------------------------------------------------------
// ORArduinoUNOModel
// Created by Mark  A. Howe on Wed 10/17/2012
// Code partially generated by the OrcaCodeWizard. Written by Mark A. Howe.
// Copyright (c) 2012 University of North Carolina. All rights reserved.
//-----------------------------------------------------------
//This program was prepared for the Regents of the University of 
//North Carolina sponsored in part by the United States 
//Department of Energy (DOE) under Grant #DE-FG02-97ER41020. 
//The University has certain rights in the program pursuant to 
//the contract and the program should not be copied or distributed 
//outside your organization.  The DOE and the University of 
//North Carolina reserve all rights in the program. Neither the authors,
//University of North Carolina, or U.S. Government make any warranty, 
//express or implied, or assume any liability or responsibility 
//for the use of this software.
//-------------------------------------------------------------
#pragma mark •••Imported Files
#import "ORSerialPortWithQueueModel.h"
#import "ORBitProcessing.h"

#define kNumArduinoUNOAdcChannels 6

@interface ORArduinoUNOModel : ORSerialPortWithQueueModel <ORBitProcessing>
{
    @private
		NSMutableData*	inComingData;
		int				pollTime;
		BOOL            delay;
		int				adc[kNumArduinoUNOAdcChannels];
}

#pragma mark •••Initialization
- (void) dealloc;

#pragma mark •••Accessors
- (int)  pollTime;
- (void) setPollTime:(int)aPollTime;
- (int)  adc:(unsigned short)aChan;
- (void) setAdc:(unsigned short)aChan withValue:(int)aValue;

#pragma mark •••Archival
- (id)   initWithCoder:(NSCoder*)decoder;
- (void) encodeWithCoder:(NSCoder*)encoder;

#pragma mark •••Command Methods
- (void) readAdcValues;
- (void) readAdcValue:(unsigned int)aChannel;

#pragma mark •••Port Methods
- (void) dataReceived:(NSNotification*)note;

#pragma mark •••HW Methods
- (void) updateAll;

#pragma mark •••Adc Processing Protocol
- (void) processIsStarting;
- (void) processIsStopping; 
- (void) startProcessCycle;
- (void) endProcessCycle;
- (BOOL) processValue:(int)channel;
- (void) setProcessOutput:(int)channel value:(int)value;
- (NSString*) processingTitle;
@end

extern NSString* ORArduinoUNOLock;
extern NSString* ORArduinoUNOModelPollTimeChanged;
extern NSString* ORArduinoUNOModelAdcChanged;
