{
    IBClasses = (
        {
            ACTIONS = {"" = id; }; 
            CLASS = FirstResponder; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSObject; 
        }, 
        {ACTIONS = {tasksCompleted = id; }; CLASS = NSObject; LANGUAGE = ObjC; }, 
        {CLASS = NSView; LANGUAGE = ObjC; SUPERCLASS = NSResponder; }, 
        {CLASS = OHexFormatter; LANGUAGE = ObjC; SUPERCLASS = NSFormatter; }, 
        {
            ACTIONS = {
                setLogScale = id; 
                shiftLeft = id; 
                shiftRight = id; 
                zoomIn = id; 
                zoomOut = id; 
            }; 
            CLASS = ORAxis; 
            LANGUAGE = ObjC; 
            OUTLETS = {preferenceController = id; viewToScale = NSView; }; 
            SUPERCLASS = NSView; 
        }, 
        {
            ACTIONS = {
                baseAddressAction = id; 
                cardInfoAction = id; 
                cfdDelayAction = id; 
                cfdFractionAction = id; 
                cfdThresholdAction = id; 
                clearFIFO = id; 
                closeNoiseFloorPanel = id; 
                dataDelayAction = id; 
                dataLengthAction = id; 
                debugAction = id; 
                enabledAction = id; 
                findNoiseFloors = id; 
                initBoard = id; 
                integrationAction = id; 
                ledThresholdAction = id; 
                noiseFloorIntegrationAction = id; 
                noiseFloorOffsetAction = id; 
                openNoiseFloorPanel = id; 
                pileUpAction = id; 
                polarityAction = id; 
                probeBoard = id; 
                readStatus = id; 
                settingLockAction = id; 
                triggerModeAction = id; 
            }; 
            CLASS = ORGretina4Controller; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                addressText = NSTextField; 
                cardInfoMatrix = NSMatrix; 
                cfdDelayMatrix = NSMatrix; 
                cfdFractionMatrix = NSMatrix; 
                cfdThresholdMatrix = NSMatrix; 
                clearFIFOButton = NSButton; 
                dataDelayMatrix = NSMatrix; 
                dataLengthMatrix = NSMatrix; 
                debugMatrix = NSMatrix; 
                enabled2Matrix = NSMatrix; 
                enabledMatrix = NSMatrix; 
                fifoState = NSTextField; 
                initButton = NSButton; 
                integrationStepper = NSStepper; 
                integrationText = NSTextField; 
                ledThresholdMatrix = NSMatrix; 
                noiseFloorButton = NSButton; 
                noiseFloorIntegrationField = NSTextField; 
                noiseFloorOffsetField = NSTextField; 
                noiseFloorPanel = NSPanel; 
                noiseFloorProgress = NSProgressIndicator; 
                pileUpMatrix = NSMatrix; 
                polarityPU0 = NSPopUpButton; 
                polarityPU1 = NSPopUpButton; 
                polarityPU2 = NSPopUpButton; 
                polarityPU3 = NSPopUpButton; 
                polarityPU4 = NSPopUpButton; 
                polarityPU5 = NSPopUpButton; 
                polarityPU6 = NSPopUpButton; 
                polarityPU7 = NSPopUpButton; 
                polarityPU8 = NSPopUpButton; 
                polarityPU9 = NSPopUpButton; 
                probeButton = NSButton; 
                rate0 = ORValueBar; 
                rateLogCB = NSButton; 
                rateTextFields = NSMatrix; 
                settingLockButton = NSButton; 
                slotField = NSTextField; 
                startNoiseFloorButton = NSButton; 
                statusButton = NSButton; 
                tabView = NSTabView; 
                timeRateLogCB = NSButton; 
                timeRatePlot = ORPlotter1D; 
                totalRate = ORValueBar; 
                totalRateLogCB = NSButton; 
                totalRateText = NSTextField; 
                triggerModePU0 = NSPopUpButton; 
                triggerModePU1 = NSPopUpButton; 
                triggerModePU2 = NSPopUpButton; 
                triggerModePU3 = NSPopUpButton; 
                triggerModePU4 = NSPopUpButton; 
                triggerModePU5 = NSPopUpButton; 
                triggerModePU6 = NSPopUpButton; 
                triggerModePU7 = NSPopUpButton; 
                triggerModePU8 = NSPopUpButton; 
                triggerModePU9 = NSPopUpButton; 
            }; 
            SUPERCLASS = OrcaObjectController; 
        }, 
        {
            ACTIONS = {
                addGateAction = id; 
                analyze = id; 
                autoScale = id; 
                averageWindowAction = id; 
                centerOnPeak = id; 
                clearActiveCurveGates = id; 
                clearActiveGate = id; 
                clearAllGates = id; 
                copy = id; 
                differentiateAction = id; 
                removeGateAction = id; 
                resetScales = id; 
                savePDF = id; 
                xAndYAutoScale = id; 
            }; 
            CLASS = ORPlotter1D; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                analysisDrawer = NSDrawer; 
                analysisView = ZFlowLayout; 
                mDataSource = id; 
                mXScale = ORAxis; 
                mYScale = ORAxis; 
            }; 
            SUPERCLASS = NSView; 
        }, 
        {CLASS = ORTimeAxis; LANGUAGE = ObjC; SUPERCLASS = ORAxis; }, 
        {CLASS = ORTimedTextField; LANGUAGE = ObjC; SUPERCLASS = NSTextField; }, 
        {
            CLASS = ORValueBar; 
            LANGUAGE = ObjC; 
            OUTLETS = {chainedView = id; dataSource = id; mXScale = id; }; 
            SUPERCLASS = NSView; 
        }, 
        {
            ACTIONS = {
                copy = id; 
                decDialog = id; 
                incDialog = id; 
                modelStepperAction = id; 
                modelSwitchAction = id; 
                saveDocument = id; 
                saveDocumentAs = id; 
            }; 
            CLASS = OrcaObjectController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                model = id; 
                modelStepper = NSStepper; 
                modelSwitchPopUp = NSPopUpButton; 
                warningField = ORTimedTextField; 
            }; 
            SUPERCLASS = NSWindowController; 
        }, 
        {CLASS = ZFlowLayout; LANGUAGE = ObjC; SUPERCLASS = NSView; }
    ); 
    IBVersion = 1; 
}