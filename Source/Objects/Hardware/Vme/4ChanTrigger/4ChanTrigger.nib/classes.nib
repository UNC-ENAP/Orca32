{
    IBClasses = (
        {CLASS = C617Hardware; LANGUAGE = ObjC; SUPERCLASS = NSObject; }, 
        {CLASS = FirstResponder; LANGUAGE = ObjC; SUPERCLASS = NSObject; }, 
        {CLASS = OHexFormatter; LANGUAGE = ObjC; SUPERCLASS = NSFormatter; }, 
        {
            ACTIONS = {
                baseAddressAction = id; 
                boardIDAction = id; 
                enableClockAction = id; 
                loadLowerClockAction = id; 
                loadUpperClockAction = id; 
                lowerClockAction = id; 
                readClocksAction = id; 
                resetAction = id; 
                resetClockAction = id; 
                settingLockAction = id; 
                shipClockAction = id; 
                softLatchAction = id; 
                specialLockAction = id; 
                statusReadAction = id; 
                triggerNameAction = id; 
                upperClockAction = id; 
                writeDisableClockAction = id; 
                writeEnableClockAction = id; 
            }; 
            CLASS = OR4ChanTriggerController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                addressStepper = NSStepper; 
                addressText = NSTextField; 
                boardIDButton = NSButton; 
                clockEnableButton = NSButton; 
                disableClockButton = NSButton; 
                enableClockButton = NSButton; 
                errorField = NSTextField; 
                getStatusButton = NSButton; 
                loadLowerClockButton = NSButton; 
                loadUpperClockButton = NSButton; 
                lowerClockField = NSTextField; 
                lowerClockStepper = NSStepper; 
                readClocksButton = NSButton; 
                resetClockButtonPage1 = NSButton; 
                resetClockButtonPage2 = NSButton; 
                resetRegistersButton = NSButton; 
                settingLockButton = NSButton; 
                settingLockDocField = NSTextField; 
                shipClockMatrix = NSMatrix; 
                slotField = NSTextField; 
                softLatchButton = NSButton; 
                specialLockButton = NSButton; 
                specialLockDocField = NSTextField; 
                tabView = NSTabView; 
                trigger1NameField = NSTextField; 
                trigger2NameField = NSTextField; 
                trigger3NameField = NSTextField; 
                trigger4NameField = NSTextField; 
                upperClockField = NSTextField; 
                upperClockStepper = NSStepper; 
            }; 
            SUPERCLASS = OrcaObjectController; 
        }, 
        {
            ACTIONS = {
                baseAddressStepperAction = id; 
                baseAddressTextAction = id; 
                continousAction = id; 
                gainStepperAction = id; 
                gainTextAction = id; 
                initBoard = id; 
                mulitBoardEnabledAction = id; 
                probeBoard = id; 
                report = id; 
                scalersEnabledAction = id; 
                thresholdStepperAction = id; 
                thresholdTextAction = id; 
            }; 
            CLASS = ORShaperController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                addressStepper = NSStepper; 
                addressText = NSTextField; 
                continousModeCB = NSButton; 
                enableMultiBoardCB = NSButton; 
                enableScalersCB = NSButton; 
                gainSteppers = NSMatrix; 
                gainTextFields = NSMatrix; 
                slotField = NSTextField; 
                thresholdSteppers = NSMatrix; 
                thresholdTextFields = NSMatrix; 
            }; 
            SUPERCLASS = OrcaObjectController; 
        }, 
        {
            ACTIONS = {
                baseAddressAction = id; 
                boardIDAction = id; 
                disableBusyAction = id; 
                disableMultiBoardAction = id; 
                enableBusyAction = id; 
                enableMultiBoardAction = id; 
                gtSyncClrAction = id; 
                gtidLowerAction = id; 
                gtidUpperAction = id; 
                initMultiBoardAction = id; 
                initTrig2Action = id; 
                latchGtid1Action = id; 
                latchGtid2Action = id; 
                loadLowerGtidAction = id; 
                loadUpperGtidAction = id; 
                readLowerGtid1Action = id; 
                readLowerGtid2Action = id; 
                readUpperGtid1Action = id; 
                readUpperGtid2Action = id; 
                resetAlteraAction = id; 
                resetEvent1 = id; 
                resetEvent2 = id; 
                settingLockAction = id; 
                shipEvt1ClkAction = id; 
                shipEvt2ClkAction = id; 
                softGtAction = id; 
                specialLockAction = id; 
                statusReadAction = id; 
                syncClr24Action = id; 
                syncClrAction = id; 
                testPollSeqAction = id; 
                trigger1NameAction = id; 
                trigger2NameAction = id; 
                useMSAMAction = id; 
                useNoHardwareAction = id; 
                useSoftwareGtIdAction = id; 
            }; 
            CLASS = ORTriggerController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                addressStepper = NSStepper; 
                addressText = NSTextField; 
                alteraRegButton = NSButton; 
                boardIDButton = NSButton; 
                disableMultiBoardButton = NSButton; 
                disableTrig2InhibButton = NSButton; 
                enableMultiBoardButton = NSButton; 
                enableTrig2InhibButton = NSButton; 
                getStatusButton = NSButton; 
                gtErrorField = NSTextField; 
                gtSyncClr24Button = NSButton; 
                gtSyncClrButton = NSButton; 
                gtid1Button = NSButton; 
                gtid2Button = NSButton; 
                gtidLowerStepper = NSStepper; 
                gtidLowerText = NSTextField; 
                gtidUpperStepper = NSStepper; 
                gtidUpperText = NSTextField; 
                initMultiBoardCB = NSButton; 
                initTrig2CB = NSButton; 
                latchGTID1Button = NSButton; 
                latchGTID2Button = NSButton; 
                loadLowerGTIDButton = NSButton; 
                loadUpperGTIDButton = NSButton; 
                pollEventButton = NSButton; 
                readLowerGTID1Button = NSButton; 
                readLowerGTID2Button = NSButton; 
                readUpperGTID1Button = NSButton; 
                readUpperGTID2Button = NSButton; 
                settingLockButton = NSButton; 
                settingLockDocField = NSTextField; 
                shipEvt1ClkButton = NSButton; 
                shipEvt2ClkButton = NSButton; 
                slotField = NSTextField; 
                softGTButton = NSButton; 
                softwareGtIdField = NSTextField; 
                specialLockButton = NSButton; 
                specialLockDocField = NSTextField; 
                syncClrButton = NSButton; 
                tabView = NSTabView; 
                trigger1NameField = NSTextField; 
                trigger2NameField = NSTextField; 
                useMSAMCB = NSButton; 
                useNoHardwareCB = NSButton; 
                useSoftwareGtIdCB = NSButton; 
            }; 
            SUPERCLASS = OrcaObjectController; 
        }, 
        {
            ACTIONS = {showAboutBox = id; showConfiguration = id; showStatus = id; }; 
            CLASS = OrcaController; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSObject; 
        }, 
        {
            ACTIONS = {modelStepperAction = id; modelSwitchAction = id; }; 
            CLASS = OrcaObjectController; 
            LANGUAGE = ObjC; 
            OUTLETS = {model = id; modelStepper = NSStepper; modelSwitchPopUp = NSPopUpButton; }; 
            SUPERCLASS = NSWindowController; 
        }
    ); 
    IBVersion = 1; 
}