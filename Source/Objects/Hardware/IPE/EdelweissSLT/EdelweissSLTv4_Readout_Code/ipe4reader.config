# config file for ipe4reader6.cpp, ver. 8
#
# first version: 2012-01-07

# For multi FIFO reading the FIFO buffer is assigned in brackets, eg. numfifo(12): 15 means: buffer 12 reads FIFO 15

#general settings
show_debug_info: 1                    # Level of debug output: 0 = off, >0 = ON; 1 = a little bit, ... 3 = a lot of output


#####################################
#          global   settings
#####################################

#
# Global Crate Settings
#

GLOBAL_UDP_SERVER_PORT: 9940         # port to receive KIT IPE crate commands (K commands)
GLOBAL_UDP_SERVER_IP_ADDR: 0.0.0.0   # default: 0.0.0.0 = any address (change it only if you want to receive commands only on dedicated IP)
#GLOBAL_UDP_SERVER_IP_ADDR: 192.168.1.105   # default: 0.0.0.0 = any address (change it only if you want to receive commands only on dedicated IP)
GLOBAL_UDP_CLIENT_PORT: 9940         # port where answers to read requests of KIT IPE crate commands (K commands) are sent to
run_main_readout_loop: 1              # 1 = yes (default), 0 = no, run only HW tests


#####################################
#          SLT and FIFO   settings
#####################################

#
# SLT settings
#
PixbusEnable: 0x9                   # pixbus enable register of SLT: 1 bit for each FLT to be read out, 20 bit; e.g.: 0x1= FLT#1 active; 0xfffff=all 20 FLTs active


#
# SLT FIFO reader 0 settings
#
readfifo(0): 1                       # switches reading of this FIFO on (1) or off (0)
udp_server_port(0): 994              # CEW_controle uses ALWAYS this port (994) to send commands!
udp_server_ip_addr(0):   192.168.1.102   #  default "0.0.0.0" = accept any ...; udp_server_ip_addr and udp_server_ip is the same, the former is recommended
send_status_udp_packet(0): 1             # 1 = yes, 0 = don't send (maybe useful for BBv1)
skip_num_status_bits(0): 1               # skip this number of status bits read from ADC chan #6 (default is 0)
#use_dummy_status_bits(0): 42              # default: 0=don't use default status (for BBv1 all bits will be 0);
                                      # for BBv1: set to ID of bolo box (then 'dummy status bits' will be used to satisfy cew_controle and value of flag is used as BB ID)

write2file(0): 0                         # always on
write2file_len_sec(0): 200                 # record how many seconds into file (in fact it counts the header words); 50 sec = ca. 280 MByte ASCII, 50 MByte binary
write2file_format(0): 1                  # 0 = ascii/text; 1 = binary file





#####################################
#          FLT   settings
#####################################

#
# FLT#1 (index 0) settings
#
FLTfiberEnable(0):       0x0
FLTfiberSet1(0):         0x0           # 0x3f    #delays
FLTfiberSet2(0):         0x0
FLTstreamMask1(0):       0x3f3f3f3f    
FLTstreamMask2(0):       0x00003f3f
FLTtriggerMask1(0):       0x00000011    
FLTtriggerMask2(0):       0x00000022
FLTsendBBstatusMask(0):  0x00000001    #6 bit; each activated BB_Status FIFO will be read out and sent as UDP packet


#
# FLT#4 (index 3) settings
#
FLTfiberEnable(3):       0x1           #6 chan bitmask
FLTBBversionMask(3):     0x0           #bitmask: BBv2/BBv1
FLTmode(3):              0x0           #tpix,tramp,tord = 000: Normal; 001: TM-Order; 010: TM-Ramp; 100: TM-PB
FLTfiberSet1(3):         0x1           #      #delays
FLTfiberSet2(3):         0x0
FLTstreamMask1(3):       0x3f3f3f3f
FLTstreamMask2(3):       0x00003f3f
FLTtriggerMask1(3):       0x00000311    
FLTtriggerMask2(3):       0x00000322
FLTsendBBstatusMask(3):  0x00000006    #6 bit; each activated BB_Status FIFO will be read out and send as UDP packet




