{
    IBClasses = (
        {
            ACTIONS = {"" = id; }; 
            CLASS = FirstResponder; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSObject; 
        }, 
        {CLASS = NSApplication; LANGUAGE = ObjC; SUPERCLASS = NSResponder; }, 
        {
            ACTIONS = {taskFinished = id; tasksCompleted = id; }; 
            CLASS = NSObject; 
            LANGUAGE = ObjC; 
        }, 
        {CLASS = NSView; LANGUAGE = ObjC; SUPERCLASS = NSResponder; }, 
        {CLASS = OHexFormatter; LANGUAGE = ObjC; SUPERCLASS = NSFormatter; }, 
        {
            ACTIONS = {
                setLogScale = id; 
                shiftLeft = id; 
                shiftRight = id; 
                zoomIn = id; 
                zoomOut = id; 
            }; 
            CLASS = ORAxis; 
            LANGUAGE = ObjC; 
            OUTLETS = {preferenceController = id; viewToScale = NSView; }; 
            SUPERCLASS = NSView; 
        }, 
        {
            ACTIONS = {
                broadcastTimeAction = id; 
                changedBinWidthPopupButtonAction = id; 
                changedHistoCalibrationChanPopupButtonAction = id; 
                changedHistoFirstBinAction = id; 
                changedHistoLastBinAction = id; 
                changedHistoMaxEnergyAction = id; 
                changedHistoMinEnergyAction = id; 
                changedHistoRecordingTimeAction = id; 
                changedHistoRunTimeAction = id; 
                checkEnergyEnabledAction = id; 
                checkWaveFormEnabledAction = id; 
                clearCurrentHistogramPageButtonAction = id; 
                daqRunModeAction = id; 
                gainAction = id; 
                helloButtonAction = id; 
                histoClearAfterReadoutAction = id; 
                histoClearAtStartAction = id; 
                histoSelfCalibrationButtonAction = id; 
                histoSelfCalibrationPercentAction = id; 
                histoSetStandardButtonAction = id; 
                histoStopIfNotClearedAction = id; 
                hitRateAllAction = id; 
                hitRateEnableAction = id; 
                hitRateLengthAction = id; 
                hitRateNoneAction = id; 
                initTPAction = id; 
                loadTimeAction = id; 
                numTestPatternsAction = id; 
                postTriggTimeAction = id; 
                readCurrentStatusButtonAction = id; 
                readEnableVetoButtonAction = id; 
                readFirstBinButtonAction = id; 
                readFltModeButtonAction = id; 
                readHistogramDataButtonAction = id; 
                readLastBinButtonAction = id; 
                readPostTriggTimeAction = id; 
                readRegisterAdressButtonAction = id; 
                readRegisterButtonAction = id; 
                readRegisterWithAdressButtonAction = id; 
                readTRecButtonAction = id; 
                readTRunAction = id; 
                readThresholdsGains = id; 
                readTimeAction = id; 
                readVetoDataButtonAction = id; 
                readVetoStateButtonAction = id; 
                readWriteRegisterChanPopUpButtonAction = id; 
                readWriteRegisterNamePopUpButtonAction = id; 
                readoutPagesAction = id; 
                resetAction = id; 
                settingLockAction = id; 
                shapingTimeAction = id; 
                showHitratesDuringHistoCalibrationAction = id; 
                startHistogramButtonAction = id; 
                statusAction = id; 
                stopHistogramButtonAction = id; 
                tModeAction = id; 
                testAction = id; 
                testEnabledAction = id; 
                testParamAction = id; 
                thresholdAction = id; 
                triggerAction = id; 
                triggerEnableAction = id; 
                versionAction = id; 
                versionFeatureCheckButtonAction = id; 
                vetoTestButtonAction = id; 
                writeEnableVetoButtonAction = id; 
                writeFltModeButtonAction = id; 
                writePostTriggTimeAction = id; 
                writeRegisterButtonAction = id; 
                writeRegisterWithAdressButtonAction = id; 
                writeTRunAction = id; 
                writeThresholdsGains = id; 
            }; 
            CLASS = ORKatrinFLTController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                broadcastTimeCB = NSButton; 
                checkEnergyEnabledButton = NSButton; 
                checkWaveFormEnabledButton = NSButton; 
                daqRunModeButton = NSPopUpButton; 
                eMaxField = NSTextField; 
                eMinField = NSTextField; 
                eSamplePopUpButton = NSPopUpButton; 
                energyDaqModeMenuItem = NSMenuItem; 
                firstBinField = NSTextField; 
                fltModeField = NSTextField; 
                fltNumberField = NSTextField; 
                gainTextFields = NSMatrix; 
                helloButton = NSButton; 
                histoCalibrationChanNumPopUpButton = NSPopUpButton; 
                histoClearAfterReadoutButton = NSButton; 
                histoClearAtStartButton = NSButton; 
                histoElapsedTimeField = NSTextField; 
                histoMessageAboutFPGAVersionField = NSTextField; 
                histoPageField = NSTextField; 
                histoProgressIndicator = NSProgressIndicator; 
                histoSelfCalibrationPercentField = NSTextField; 
                histoStopIfNotClearedButton = NSButton; 
                histoStopIfNotClearedPopUpButton = NSPopUpButton; 
                histogramDaqModeMenuItem = NSMenuItem; 
                histogramPlotterId = ORPlotter1D; 
                hitRateAllButton = NSButton; 
                hitRateEnabledCBs = NSMatrix; 
                hitRateLengthField = NSTextField; 
                hitRateNoneButton = NSButton; 
                initTPButton = NSButton; 
                lastBinField = NSTextField; 
                loadTimeButton = NSButton; 
                maxEnergyField0 = NSTextField; 
                numTestPatternsField = NSTextField; 
                numTestPatternsStepper = NSStepper; 
                patternTable = NSTableView; 
                postTriggTimeField = NSTextField; 
                rate0 = ORValueBar; 
                rateLogCB = NSButton; 
                rateTextFields = NSMatrix; 
                readCalibrationHistogramDataButton = NSButton; 
                readEnableVetoButton = NSButton; 
                readFltModeButton = NSButton; 
                readHistogramStatusRegButton = NSButton; 
                readThresholdsGainsButton = NSButton; 
                readTimeButton = NSButton; 
                readVetoDataButton = NSButton; 
                readWriteRegisterAdressField = NSTextField; 
                readWriteRegisterChanPopUpButton = NSPopUpButton; 
                readWriteRegisterField = NSTextField; 
                readWriteRegisterNamePopUpButton = NSPopUpButton; 
                readoutPagesField = NSTextField; 
                resetButton = NSButton; 
                settingLockButton = NSButton; 
                shapingTimePU0 = NSPopUpButton; 
                shapingTimePU1 = NSPopUpButton; 
                shapingTimePU2 = NSPopUpButton; 
                shapingTimePU3 = NSPopUpButton; 
                showHitratesDuringHistoCalibrationButton = NSButton; 
                startCalibrationHistogramButton = NSButton; 
                startSelfCalibrationHistogramButton = NSButton; 
                statusButton = NSButton; 
                stopCalibrationHistogramButton = NSButton; 
                tModeMatrix = NSMatrix; 
                tRecField = NSTextField; 
                tRunField = NSTextField; 
                tabView = NSTabView; 
                testButton = NSButton; 
                testEnabledMatrix = NSMatrix; 
                testParamsMatrix = NSMatrix; 
                testStatusMatrix = NSMatrix; 
                thresholdTextFields = NSMatrix; 
                timeRateLogCB = NSButton; 
                timeRatePlot = ORPlotter1D; 
                totalHitRateField = NSTextField; 
                totalRate = ORValueBar; 
                totalRateLogCB = NSButton; 
                totalView = NSView; 
                triggerButton = NSButton; 
                triggerEnabledCBs = NSMatrix; 
                versionButton = NSButton; 
                versionHistoCheckButton = NSButton; 
                versionStdCheckButton = NSButton; 
                versionVetoCheckButton = NSButton; 
                vetoDaqModeMenuItem = NSMenuItem; 
                vetoEnableButton = NSButton; 
                writeEnableVetoButton = NSButton; 
                writeFltModeButton = NSButton; 
                writePostTriggerTimeButton = NSButton; 
                writeThresholdsGainsButton = NSButton; 
            }; 
            SUPERCLASS = OrcaObjectController; 
        }, 
        {
            ACTIONS = {
                addGateAction = id; 
                analyze = id; 
                autoScale = id; 
                averageWindowAction = id; 
                centerOnPeak = id; 
                clearActiveCurveGates = id; 
                clearActiveGate = id; 
                clearAllGates = id; 
                copy = id; 
                differentiateAction = id; 
                removeGateAction = id; 
                resetScales = id; 
                savePDF = id; 
                xAndYAutoScale = id; 
            }; 
            CLASS = ORPlotter1D; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                analysisDrawer = NSDrawer; 
                analysisView = ZFlowLayout; 
                mDataSource = id; 
                mXScale = ORAxis; 
                mYScale = ORAxis; 
            }; 
            SUPERCLASS = NSView; 
        }, 
        {CLASS = ORTimeAxis; LANGUAGE = ObjC; SUPERCLASS = ORAxis; }, 
        {CLASS = ORTimedTextField; LANGUAGE = ObjC; SUPERCLASS = NSTextField; }, 
        {
            CLASS = ORValueBar; 
            LANGUAGE = ObjC; 
            OUTLETS = {chainedView = id; dataSource = id; mXScale = id; }; 
            SUPERCLASS = NSView; 
        }, 
        {
            ACTIONS = {
                copy = id; 
                decDialog = id; 
                incDialog = id; 
                saveDocument = id; 
                saveDocumentAs = id; 
            }; 
            CLASS = OrcaObjectController; 
            LANGUAGE = ObjC; 
            OUTLETS = {model = id; warningField = ORTimedTextField; }; 
            SUPERCLASS = NSWindowController; 
        }, 
        {CLASS = ZFlowLayout; LANGUAGE = ObjC; SUPERCLASS = NSView; }
    ); 
    IBVersion = 1; 
}